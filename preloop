#Instala e inicia o pygame
import pygame
import random
pygame.init()  
pygame.mixer.init()

# Variaveis importantes
NADA = 0
dificuldadedojogo = 1
maxscore = 0

# Prepara as musicas do jogo
musicamenu = pygame.mixer.Sound("Downloads\Audio - Songs\OMORI OST - 103 Gator Gambol.mp3")
musicajogo = pygame.mixer.Sound("Downloads\Audio - Songs\Deltarune Chapter 2 OST_ 35 - Knock You Down !!.mp3")

# Define modos do jogo
menuactive = True
tutorialactive = False
dificuldadeactive = False
gameactive = False
paused = False  # Novo estado de pausa

second = 0
score = 0
score_timer = 0
fonte = pygame.font.SysFont(None, 36)  # Fonte para score

# Cria um objeto clock. Ai separa o jogo a rodar a 60 FPS
clock = pygame.time.Clock()
clock.tick(60)

# Definindo sprites do menu
botao_menu_jogo = pygame.image.load("Downloads\Images - Menu\Botao_Jogar.png")
botao_menu_jogo = pygame.transform.scale(botao_menu_jogo, (200,80))
botao_menu_tutorial = pygame.image.load("Downloads\Images - Menu\Botao_Tutorial.png")
botao_menu_tutorial = pygame.transform.scale(botao_menu_tutorial, (200,80))
botao_dificuldade_easy = pygame.image.load("Downloads\Images - Menu\Botao_Dificuldade_EasyV1.png")
botao_dificuldade_easy = pygame.transform.scale(botao_dificuldade_easy, (256,256))
botao_dificuldade_hard = pygame.image.load("Downloads\Images - Menu\Botao_Dificuldade_HardV1.png")
botao_dificuldade_hard = pygame.transform.scale(botao_dificuldade_hard, (256,256))
mago_eastergg = pygame.image.load("Downloads\Images - Sprites\The Mage (IDK).png")
mago_eastergg = pygame.transform.scale(mago_eastergg, (128, 128))

# Planos de fundo
backgroundsize = (1024,512)
menu = pygame.image.load("Downloads\Images - Menu\Overdrift_Menu.png")
menu = pygame.transform.scale(menu, backgroundsize)
mapa = pygame.image.load("Downloads\Images - Menu\Overdriftmap_VF.png")
mapa = pygame.transform.scale(mapa, backgroundsize)
dificuldade = pygame.image.load("Downloads\Images - Menu\Overdrift_dificulty_VFinal-export.png")
dificuldade = pygame.transform.scale(dificuldade, backgroundsize)
tutorial = pygame.image.load("Downloads\Images - Menu\menu_question.png")
tutorial = pygame.transform.scale(tutorial, backgroundsize)

# Sprites do jogo
carro_mc = pygame.image.load("Downloads\Images - Sprites\Carro_MC_V1.png")
carro_mc = pygame.transform.scale(carro_mc, (64, 64))
carro_obstaculo_ciano = pygame.image.load("Downloads\Images - Sprites\Carro_Obstaculo_(Ciano).png")
carro_obstaculo_ciano = pygame.transform.scale(carro_obstaculo_ciano, (64, 64))
carro_obstaculo_ciano = pygame.transform.flip(carro_obstaculo_ciano, False, True)
onibus_obstaculo = pygame.image.load("Downloads\Images - Sprites\Onibus_Obstaculo_V0.png")
onibus_obstaculo = pygame.transform.scale(onibus_obstaculo, (64, 128))
explosao = pygame.image.load("Downloads\Images - Sprites\Explosão_derrota.png")
explosao = pygame.transform.scale(explosao, (128, 128))

# Display
largura_tela = 1024
altura_tela = 512
display_surface = pygame.display.set_mode((largura_tela, altura_tela))
pygame.display.set_icon(carro_mc)
pygame.display.set_caption('OverDrift.exe')

running = True
musicajatocando = False

# Reset do jogo
def resetar_jogo():
    global carro_rect, obstaculos, musicajatocando, score, score_timer, maxscore
    score = 0
    score_timer = 0
    carro_rect = carro_mc.get_rect(center=(512, 400))
    obstaculos = []
    for _ in range(5 * dificuldadedojogo):
        tipo = random.choice(["carro", "onibus"])
        if tipo == "carro":
            obstaculo = carro_obstaculo_ciano.get_rect(topleft=(random.randint(0, largura_tela-64), random.randint(-600, -64)))
        else:
            obstaculo = onibus_obstaculo.get_rect(topleft=(random.randint(0, largura_tela-64), random.randint(-600, -128)))
        obstaculos.append((tipo, obstaculo))
    musicajatocando = False

resetar_jogo()

while running:
    ms = clock.tick(60)
    tecla = pygame.key.get_pressed()

    if not gameactive and not musicajatocando:
        pygame.mixer.stop()
        pygame.mixer.music.set_volume(0.0001)
        musicamenu.play(-1)
        musicajatocando = True
    elif gameactive and not musicajatocando:
        pygame.mixer.stop()
        musicajogo.play(-1)
        musicajatocando = True

    if menuactive:
        hitboxbotaomenujogo = botao_menu_jogo.get_rect(topleft=(250, 300))
        hitboxbotaomenututorial = botao_menu_tutorial.get_rect(topleft=(575, 300))
        display_surface.blit(menu, (0, 0))
        display_surface.blit(botao_menu_jogo, (250, 300))
        display_surface.blit(botao_menu_tutorial, (575, 300))
        texto_maxscore = fonte.render(f"Max Score: {maxscore}", True, (255, 255, 255))
        display_surface.blit(texto_maxscore, (10, 10))

    if tutorialactive:
        display_surface.blit(tutorial, (0,0))

    if dificuldadeactive:
        hitboxbotaodificuldadeeasy = botao_dificuldade_easy.get_rect(topleft=(320-140, 300-90))
        hitboxbotaodificuldadehard = botao_dificuldade_hard.get_rect(topleft=(640-45, 300-90))
        display_surface.blit(dificuldade, (0,0))
        display_surface.blit(botao_dificuldade_easy, (320-140, 300-90))
        display_surface.blit(botao_dificuldade_hard, (640-45, 300-90))
        if tecla[pygame.K_m] and tecla[pygame.K_a] and tecla[pygame.K_g]:
            display_surface.blit(mago_eastergg, (1024-128, 512-128))
            pygame.display.set_caption('Mago da internet! Parabéns em achar um easter egg!')

    if gameactive and not paused:
        second += ms/1000
        score_timer += ms
        maxscore = 0
        if score_timer >= 10:
            score += 1 * dificuldadedojogo
            score_timer = 0
        if score >= maxscore:
            maxscore = score

        display_surface.blit(mapa, (0,0))

        velocidade = 7
        if tecla[pygame.K_w]: carro_rect.y -= velocidade
        if tecla[pygame.K_s]: carro_rect.y += velocidade
        if tecla[pygame.K_a]: carro_rect.x -= velocidade
        if tecla[pygame.K_d]: carro_rect.x += velocidade
        carro_rect.clamp_ip(display_surface.get_rect())

        display_surface.blit(carro_mc, carro_rect.topleft)

        for tipo, obstaculo in obstaculos:
            obstaculo.y += 5
            if tipo == "carro":
                display_surface.blit(carro_obstaculo_ciano, obstaculo.topleft)
            else:
                display_surface.blit(onibus_obstaculo, obstaculo.topleft)
            if carro_rect.colliderect(obstaculo):
                display_surface.blit(explosao, carro_rect.topleft)
                pygame.display.update()
                pygame.time.delay(1000)
                gameactive = False
                menuactive = True
                resetar_jogo()
                break
            if obstaculo.top > altura_tela:
                obstaculo.y = random.randint(-600, -64)
                obstaculo.x = random.randint(0, largura_tela-64)

        # Exibir score
        texto_score = fonte.render(f"Score: {score}", True, (255, 255, 255))
        display_surface.blit(texto_score, (10, 10))

    elif paused and gameactive:
        texto_pause = fonte.render("PAUSADO - Aperte P ou ESC para voltar", True, (255, 255, 255))
        display_surface.blit(texto_pause, (260, 250))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        if event.type == pygame.KEYDOWN:
            if tutorialactive:
                menuactive = True
                tutorialactive = False
            if dificuldadeactive and event.key == pygame.K_ESCAPE:
                menuactive = True
                dificuldadeactive = False
            if gameactive and event.key == pygame.K_p:
                paused = not paused  # Alterna entre pausado e ativo
            if gameactive and event.key == pygame.K_ESCAPE:
                paused = not paused  # Alterna entre pausado e ativo

        elif event.type == pygame.MOUSEBUTTONDOWN:   
            if hitboxbotaomenujogo.collidepoint(event.pos) and menuactive:  
                menuactive = False
                dificuldadeactive = True
            elif hitboxbotaomenututorial.collidepoint(event.pos) and menuactive:  
                menuactive = False
                tutorialactive = True
            elif dificuldadeactive:
                if hitboxbotaodificuldadeeasy.collidepoint(event.pos):  
                    gameactive = True
                    dificuldadeactive = False
                    dificuldadedojogo = 1
                    resetar_jogo()
                if hitboxbotaodificuldadehard.collidepoint(event.pos):  
                    gameactive = True
                    dificuldadeactive = False
                    dificuldadedojogo = 2
                    resetar_jogo()

    pygame.display.update()

pygame.quit()